<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Loknath&#39;s Space</title>
    <link>https://dhar01.github.io/</link>
    <description>Recent content on Loknath&#39;s Space</description>
    <image>
      <title>Loknath&#39;s Space</title>
      <url>https://dhar01.github.io/images/cover.png</url>
      <link>https://dhar01.github.io/images/cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 28 May 2023 01:30:03 +0000</lastBuildDate><atom:link href="https://dhar01.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>📊 Be better..</title>
      <link>https://dhar01.github.io/posts/be-better-version/</link>
      <pubDate>Sun, 28 May 2023 01:30:03 +0000</pubDate>
      
      <guid>https://dhar01.github.io/posts/be-better-version/</guid>
      <description>I often consider myself &amp;ldquo;Lucky&amp;rdquo; to be born in this era; the era of being connected, knowledge sharing and collaboration. While scrolling through the internet, I found so many well-written thoughts and blogs that should be shared. In my daily life, I&amp;rsquo;m trying to be a DevOps practitioner, to be a gopher and sharpen my knowledge of the basics.
Here, I will share some resources, i.e., blogs I find amazing. Whether you&amp;rsquo;re a DevOps practitioner, SRE, Linux System Administrator or believe in self-development - these resources will significantly help you.</description>
    </item>
    
    <item>
      <title>Nginx Logging</title>
      <link>https://dhar01.github.io/posts/nginx_logging/</link>
      <pubDate>Sat, 20 May 2023 11:30:03 +0600</pubDate>
      
      <guid>https://dhar01.github.io/posts/nginx_logging/</guid>
      <description>Nginx uses a few different directives to control system logging. The one included in the core module is called error_log.
error_log directive Syntax: error_log log_file log_level.
log_file: specifies the file where the logs will be written. log_level: specifies the lowest level of logging to be recorded. Logging levels emerg: emergency situations. alert: crit: error: warn: notice: info debug: Example:
error_log /var/log/nginx/error.log crit; # Don&amp;#39;t log anything error_log /dev/null crit; error_log is part of the core module; the access_log is part of the HttpLogModule.</description>
    </item>
    
    <item>
      <title>Let&#39;s learn: logrotate!</title>
      <link>https://dhar01.github.io/posts/all_about_logrotate/</link>
      <pubDate>Wed, 10 May 2023 11:30:03 +0600</pubDate>
      
      <guid>https://dhar01.github.io/posts/all_about_logrotate/</guid>
      <description>Logrotate is a system utility that manages the automatic rotation and compression of log files.
logrotate --version man logrotate Configuration can be found generally in two places:
/etc/logrotate.conf: contain some default settings, sets up rotation for a few logs that are not owned by any system packages. Also uses an include statement to pull in configuration from any file from the logrotate directory. /etc/logrotate.d: files for packages. By default, logrotate.confwill configure weekly log rotations, with log files owned by the root user and the syslog group.</description>
    </item>
    
    <item>
      <title>Let&#39;s learn: journalctl!</title>
      <link>https://dhar01.github.io/posts/all-about-journalctl/</link>
      <pubDate>Sun, 30 Apr 2023 11:30:03 +0600</pubDate>
      
      <guid>https://dhar01.github.io/posts/all-about-journalctl/</guid>
      <description>jounralctl is the command line tool that let us interact with the journal logs. Default location of journald logs is /var/log/journal directory.
Type journalctl in the terminal, it will show the journal logs in chronological order.
journalctl --no-pager will display entire logs directly on the screen. journalctl -n 25: will display most recent 25 lines of the logs. journalctl -f: view logs in real time. jouralctl --utc: display logs in UTC time.</description>
    </item>
    
    <item>
      <title>Let&#39;s learn: systemctl!</title>
      <link>https://dhar01.github.io/posts/all_about_systemctl/</link>
      <pubDate>Mon, 20 Mar 2023 11:30:03 +0600</pubDate>
      
      <guid>https://dhar01.github.io/posts/all_about_systemctl/</guid>
      <description>Service management sudo systemctl start app.service sudo systemctl stop app.service sudo systemctl restart app.service sudo systemctl reload app.service sudo systemctl reload-or-restart app.service sudo systemctl enable app.service sudo systemctl disable app.service Checking status systemctl status app.service systemctl is-active app.service systemctl is-enabled app.service systemctl is-failed app.service System state overview # see a list of active units systemctl list-units systemctl # returns same as above systemctl list-units --all systemctl list-units --all --state=inactive systemctl list-units --type=service To see every available units in the system paths (including those that systemd has not attempted to load):</description>
    </item>
    
    <item>
      <title>Common Vim/Neovim Settings</title>
      <link>https://dhar01.github.io/posts/common-vim-neovim-settings/</link>
      <pubDate>Wed, 15 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://dhar01.github.io/posts/common-vim-neovim-settings/</guid>
      <description>As I edit system configuration files daily on the cloud, my number one choice for a text editor is Vim. So here&amp;rsquo;s a post about some standard settings:
Will work on NeoVim too!
&amp;#34; Number-related settings set number &amp;#34; Display line numbers set relativenumber &amp;#34; Display relative line numbers set signcolumn=yes &amp;#34; Always show the sign column &amp;#34; Search-related settings set hlsearch &amp;#34; Highlight search results set incsearch &amp;#34; Highlight search matches as you type set ignorecase &amp;#34; Ignore case when searching set smartcase &amp;#34; Ignore case only if search pattern is all lowercase &amp;#34; Appearance-related settings set laststatus=2 &amp;#34; Always show status line set cursorline &amp;#34; Highlight current line &amp;#34; set colorcolumn=80 &amp;#34; Display a vertical line at column 80 to help with line length set noerrorbells &amp;#34; Disable error bells and visual bells set wrap &amp;#34; Wrap long lines visually set linebreak &amp;#34; Break long lines at word boundaries &amp;#34; Window-related settings set splitright &amp;#34; Split windows to the right set splitbelow &amp;#34; Split windows below set scrolloff=5 &amp;#34; Keep 5 lines above/below cursor when scrolling set clipboard+=unnamed &amp;#34; Copy text to system clipboard set mouse=a &amp;#34; Enable mouse support &amp;#34; Completion-related settings set wildmenu &amp;#34; Show command-line completion options in a menu set wildmode=list:longest,full &amp;#34; Highlight and complete the longest common part of the options &amp;#34; Mode-related settings set showmode &amp;#34; Show current mode (insert/visual/command) in status line &amp;#34; Folding-related settings set foldmethod=indent &amp;#34; Use indent-based folding set foldlevelstart=99 &amp;#34; Start with all folds open &amp;#34; Wrapping-related settings set whichwrap+=&amp;lt;,&amp;gt;,h &amp;#34; Allow wrapping past the beginning or end of a line &amp;#34; Create a horizontal split with Ctrl+s nnoremap &amp;lt;C-s&amp;gt; :split&amp;lt;CR&amp;gt; &amp;#34; Create a vertical split with Ctrl+v nnoremap &amp;lt;C-v&amp;gt; :vsplit&amp;lt;CR&amp;gt; &amp;#34; Create a new horizontal split and start editing a new file with Ctrl+n nnoremap &amp;lt;C-n&amp;gt; :split&amp;lt;CR&amp;gt;:enew&amp;lt;CR&amp;gt; &amp;#34; Create a new vertical split and start editing a new file with Ctrl+m nnoremap &amp;lt;C-m&amp;gt; :vsplit&amp;lt;CR&amp;gt;:enew&amp;lt;CR&amp;gt; Thanks!</description>
    </item>
    
    <item>
      <title>Set up SSL for SolrCloud</title>
      <link>https://dhar01.github.io/posts/set-up-ssl-for-solrcloud/</link>
      <pubDate>Mon, 13 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://dhar01.github.io/posts/set-up-ssl-for-solrcloud/</guid>
      <description>As I am highly dependent on official documentation, I found that Apache Solr maintain an awesome documentation from which I learned a lot. Setting up SSL can be found here. I am writing this for easier step by step setup.
Happy Searching!
Generate certificate &amp;amp; key From the official documentation, you can generate a self-signed certificate to test your setup. But for the trusted authority, generate a certificate and convert it to .</description>
    </item>
    
    <item>
      <title>Let&#39;s learn: Vim/NeoVim!</title>
      <link>https://dhar01.github.io/posts/all_about_vim/</link>
      <pubDate>Wed, 08 Feb 2023 11:30:03 +0600</pubDate>
      
      <guid>https://dhar01.github.io/posts/all_about_vim/</guid>
      <description>Syntax: vim filename.
Movement Navigating h /j/k/l :
C-U/C-D : half-page up/down.
C-B/C-F : page up/down.
H : move to top of the screen.
M : move to middle of the screen.
L : move to bottom of the screen.
Words b/w : previous/next word.
ge/e : previous/next end of word.
gj : move cursor down (multi-line text).
gk : move cursor up (multi-line text).
Line $ : to the end of the line (including last character).</description>
    </item>
    
    <item>
      <title>Let&#39;s learn: Wildcards!</title>
      <link>https://dhar01.github.io/posts/all_about_wildcards/</link>
      <pubDate>Wed, 18 Jan 2023 11:30:03 +0600</pubDate>
      
      <guid>https://dhar01.github.io/posts/all_about_wildcards/</guid>
      <description>Wildcards (also known as globbing) allows us to select filenames based on patterns of characters.
Wildcard Meaning * matches any character ? matches any single character [characters] matches any character that is a member of the set characters [!characters] matches any character that is not a member of the set characters [[:class:]] matches any character that is a member of the specified class Commonly used character classes:
Character class meaning [:alnum:] matches any alphanumeric character [:alpha:] matches any alphabetic character [:digit:] matches any numeral [:lower:] matches any lowercase letter [:upper:] matches any UPPERCASE letter Examples [[:upper:]]* : Any file beginning with an uppercase letter.</description>
    </item>
    
    <item>
      <title>Let&#39;s learn: grep!</title>
      <link>https://dhar01.github.io/posts/all-about-grep/</link>
      <pubDate>Tue, 13 Dec 2022 11:30:03 +0600</pubDate>
      
      <guid>https://dhar01.github.io/posts/all-about-grep/</guid>
      <description>grep: Global Regular Expression print.
grep is a powerful program used to find text patterns within files. It uses regular expressions (shortly regex) to match the pattern.
When grep encounters a pattern in the file, it prints out the lines containing it. If no file is given, it will search recursively search the given pattern in the files in current directory.
grep pattern [file...] grep &amp;lt;search-pattern&amp;gt; file.txt To show the line number in the output, use -n option: grep -n &amp;lt;search-pattern&amp;gt; file.</description>
    </item>
    
    <item>
      <title>Let&#39;s learn: less!</title>
      <link>https://dhar01.github.io/posts/all_about_less/</link>
      <pubDate>Sun, 13 Nov 2022 11:30:03 +0600</pubDate>
      
      <guid>https://dhar01.github.io/posts/all_about_less/</guid>
      <description>The less command is a program to view text files.
Example:
less filename less /etc/passwd Some action commands for less:
Command Action Page Up or b Scroll back one page Page Down or space Scroll forward one page Up Arrow Scroll up one line Down Arrow Scroll down one line G Move to the end of the text file g or 1G Move to the beginning of the text file /characters search forward to the next occurrence of characters n search for the next occurrence of the previous search h display help screen q quit less less is more</description>
    </item>
    
    <item>
      <title>Let&#39;s learn: man pages!</title>
      <link>https://dhar01.github.io/posts/all_about_man-pages/</link>
      <pubDate>Thu, 13 Oct 2022 11:30:03 +0600</pubDate>
      
      <guid>https://dhar01.github.io/posts/all_about_man-pages/</guid>
      <description>man - display a program&amp;rsquo;s manual page.
man program # program is the name of the command On most Linux systems, man uses less to display manual page.
The manual that man displays is broken into sections and covers not only user commands but also system administration commands, programming interfaces, file formats and more.
Man page organization:
Section Contents 1 user commands 2 programming interfaces for kernel system calls 3 programming interfaces to the C library 4 special files such as device nodes and drivers 5 file formats 6 games and amusements such as screen savers 7 Miscellaneous 8 System administration commands 9 Obscure kernel specs and interfaces man section search_item man 5 passwd Refer to a specific section of the manual to find what we are looking for.</description>
    </item>
    
    <item>
      <title>Setting Up SolrCloud for Production</title>
      <link>https://dhar01.github.io/posts/set-up-solrcloud-for-production/</link>
      <pubDate>Thu, 28 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://dhar01.github.io/posts/set-up-solrcloud-for-production/</guid>
      <description>I wasn&amp;rsquo;t familiar with SolrCloud when I started working with this. When I started to learn it and working directly with it - I had done so many mistakes. Even setting up SolrCloud for production was a hassle for me (I&amp;rsquo;m a slow learner). But overtime, I got a hang of it and I think writing an up-to-date guide to set up SolrCloud on production server is a good idea.</description>
    </item>
    
    <item>
      <title>Let&#39;s learn: Terminal Shortcuts!</title>
      <link>https://dhar01.github.io/posts/all_about_linux_terminal/</link>
      <pubDate>Sat, 23 Jul 2022 11:30:03 +0600</pubDate>
      
      <guid>https://dhar01.github.io/posts/all_about_linux_terminal/</guid>
      <description> To enter virtual consoles: Ctrl+Alt+F1 to Ctrl+Alt+F6 Switch from one to another console: Alt+F1 to Alt+F6 To return to the graphical desktop: Alt+F7 command meaning Ctrl+a beginning of the line Ctrl+c kill process/stop running Ctrl+d ending terminal session Ctrl+e end of line Ctrl+k cut from cursor to the end of line Ctrl+l clear screen Ctrl+u cut from cursor to the beginning of line Ctrl+w erase word from cursor to begin Ctrl+y get back from last cut text Ctrl+z froze the program/pause Alt+b backward one word Alt+d cut from cursor to end of word Alt+f forward one word Alt+backspace cut from cursor to beginning of the word Ctrl+shift+c copy from terminal Ctrl+shift+v paste on terminal </description>
    </item>
    
    <item>
      <title>Learning Git</title>
      <link>https://dhar01.github.io/posts/all_about_git/</link>
      <pubDate>Tue, 31 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://dhar01.github.io/posts/all_about_git/</guid>
      <description>SCM : Source Control Management.
VCS: Version Control System.
All of the content here is for command line, as I am very comfortable with terminal [and of course Linux].
Basic git syntax: program | action | destination.
For example: git | add | .
Configure git # set your name $ git config user.name &amp;#34;user-name&amp;#34; # set your email $ git config user.email &amp;#34;user-email@example.com&amp;#34; # set global user name $ git config --global user.</description>
    </item>
    
    <item>
      <title>Making custom badges using shields.io</title>
      <link>https://dhar01.github.io/posts/custom-badges-github-profile/</link>
      <pubDate>Fri, 18 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://dhar01.github.io/posts/custom-badges-github-profile/</guid>
      <description>When I wanted to customize my GitHub profile, I visited many developers&amp;rsquo; GitHub profiles. I saw some badges which seemed cool to me. When I looked at the code behind the shapes, I didn&amp;rsquo;t know what was happening. Later, I tried to copy some of the code and paste them into my code, but it couldn&amp;rsquo;t solve the need.
After some reading and searching, I understood how to make them. I am writing this post as a reference so that one can understand how to make those badges, including me.</description>
    </item>
    
    <item>
      <title>Google Dorking (finding information) - OSINT</title>
      <link>https://dhar01.github.io/posts/google-fu/</link>
      <pubDate>Fri, 25 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://dhar01.github.io/posts/google-fu/</guid>
      <description>Everyone should learn how to search.
(This post contains some google dorking techniques for finding information on the internet. Google is your friend.)
Searching Narrow down search query, use &amp;quot;_something_&amp;quot;. Ex: &amp;quot;Liverpool&amp;quot;
For exact topic and site:
site: website-name topic-name site: geekforgeeks sql Some terms Term Action filetype: search for a file by its extension cache: view google&amp;rsquo;s cached version of a specified URL intitle: the specified phrase MUST appear in the title of the page allintext: searches specific text contained on any web page allintitle: show pages that contain titles with X characters allinurl: used to fetch results whose URL contains all the specified characters inurl: useful for single keyword, same as allinurl intitle: used to search for various keywords inside the title inanchor: useful when need to search for an exact anchor text used on any links.</description>
    </item>
    
    <item>
      <title>SQL Overview - 02</title>
      <link>https://dhar01.github.io/posts/sql-overview-select/</link>
      <pubDate>Wed, 23 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://dhar01.github.io/posts/sql-overview-select/</guid>
      <description>The SELECT statement is used to query the database and retrieve data that match the criteria.
The SELECT statement has five main clauses to choose from.
Format of the SELECT statement:
SELECT [ALL | DISTINCT] column1[,column2] FROM [table1, table2] [WHERE &amp;#34;conditions&amp;#34;] [GROUP BY &amp;#34;column-list&amp;#34;] [HAVING &amp;#34;conditions] [ORDER BY &amp;#34;column-list&amp;#34; [ASC | DESC] ] Example:
SELECT name, age, salary FROM employee WHERE age &amp;gt; 40; ALL and DISTINCT are keywords used to select either all (default) or the distinct or unique records in query results.</description>
    </item>
    
    <item>
      <title>SQL Overview - 01</title>
      <link>https://dhar01.github.io/posts/sql-overview-basic/</link>
      <pubDate>Tue, 22 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>https://dhar01.github.io/posts/sql-overview-basic/</guid>
      <description>This is a note type post for personal reference. I am learning SQL right now and for the learning purpose, I chose two websites:
SQL Course; SQLBolt; For awesome learning experience, my advice is to follow one of them according to your preference. This post is just a summary of those content.
Also, if anyone wants to practice SQL, see Hackerrank&amp;rsquo;s SQL problem-set.
This is still in the early stage. Any suggestions will be appreciated.</description>
    </item>
    
    <item>
      <title>👨‍💻 The man or the mind behind..</title>
      <link>https://dhar01.github.io/about/</link>
      <pubDate>Sat, 19 Feb 2022 11:30:03 +0000</pubDate>
      
      <guid>https://dhar01.github.io/about/</guid>
      <description>👋 Hey there I’m Loknath, a Linux enthusiast who bleeds Liverpool RED on matchday! Trying to be a programmer with Golang, also an infrequent writer. I enjoy cinema, and anime, can’t live without songs, and buy more books than I read. I feel like dancing on the occasion of playing Fifa, sometimes craving for the smell and sounds of rain, and most of the time, haha, for off days.
In the daytime, I would love to see myself as a storyteller, but in reality, I pass my days as Jr.</description>
    </item>
    
    <item>
      <title>Setting up Codeblocks with Freeglut on Linux</title>
      <link>https://dhar01.github.io/posts/codeblocks-with-freeglut-linux/</link>
      <pubDate>Sat, 06 Feb 2021 01:34:53 +0600</pubDate>
      
      <guid>https://dhar01.github.io/posts/codeblocks-with-freeglut-linux/</guid>
      <description>In my Computer Graphics class, the teacher asked us to setup Codeblocks for the glut. She gave us a tutorial on how to setup Codeblocks on windows but didn&amp;rsquo;t provide any suggestion to set up on Linux. After some searching on google, I was able to setup Codeblocks with Freeglut (which is an alternative to Glut and available on Linux). This is a kind of writeup (or tutorial) on how I was able to setup Codeblocks with Freeglut.</description>
    </item>
    
    <item>
      <title>Web Fundamentals walk-through [TryHackMe]</title>
      <link>https://dhar01.github.io/posts/web-fundamentals-walkthrough/</link>
      <pubDate>Sat, 10 Oct 2020 01:34:53 +0600</pubDate>
      
      <guid>https://dhar01.github.io/posts/web-fundamentals-walkthrough/</guid>
      <description>Task 2 A DNS request is made. When browser knows the server&amp;rsquo;s IP address, it ask the server for the web page which is done with a HTTP GET request.
GET is an example of a HTTP verb, which are the different types of request. The server responds to the GET request with the web page content. IF the web page is loading extra resources, like JavaScript, images, or CSS files, those will be retrieved in separate GET requests.</description>
    </item>
    
    <item>
      <title>Shodan.io Walk-through [Tryhackme]</title>
      <link>https://dhar01.github.io/posts/shodan-walkthrough/</link>
      <pubDate>Fri, 09 Oct 2020 01:34:53 +0600</pubDate>
      
      <guid>https://dhar01.github.io/posts/shodan-walkthrough/</guid>
      <description>Shodan.io is a search engine for the internet of things. There is a room about Shodan in Tryhackme and this walk-through is about that.
Due to the nature of Shodan and its scanning services, the answer is changing all the time. So keep trying.
Task 01 An autonomous system number (ASN) is a global identifier of a range of IP addresses. Basically, large companies like Google, Microsoft have their own ASN for all of the IP addresses they own.</description>
    </item>
    
    
    
  </channel>
</rss>
