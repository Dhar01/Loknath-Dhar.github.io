<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>cheatsheet on Loknath&#39;s Space</title>
    <link>https://dhar01.github.io/tags/cheatsheet/</link>
    <description>Recent content in cheatsheet on Loknath&#39;s Space</description>
    <image>
      <title>Loknath&#39;s Space</title>
      <url>https://dhar01.github.io/images/cover.png</url>
      <link>https://dhar01.github.io/images/cover.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 May 2023 11:30:03 +0600</lastBuildDate><atom:link href="https://dhar01.github.io/tags/cheatsheet/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Let&#39;s learn: logrotate!</title>
      <link>https://dhar01.github.io/posts/all_about_logrotate/</link>
      <pubDate>Wed, 10 May 2023 11:30:03 +0600</pubDate>
      
      <guid>https://dhar01.github.io/posts/all_about_logrotate/</guid>
      <description>Logrotate is a system utility that manages the automatic rotation and compression of log files.
logrotate --version man logrotate Configuration can be found generally in two places:
/etc/logrotate.conf: contain some default settings, sets up rotation for a few logs that are not owned by any system packages. Also uses an include statement to pull in configuration from any file from the logrotate directory. /etc/logrotate.d: files for packages. By default, logrotate.confwill configure weekly log rotations, with log files owned by the root user and the syslog group.</description>
    </item>
    
    <item>
      <title>Let&#39;s learn: journalctl!</title>
      <link>https://dhar01.github.io/posts/all-about-journalctl/</link>
      <pubDate>Sun, 30 Apr 2023 11:30:03 +0600</pubDate>
      
      <guid>https://dhar01.github.io/posts/all-about-journalctl/</guid>
      <description>jounralctl is the command line tool that let us interact with the journal logs. Default location of journald logs is /var/log/journal directory.
Type journalctl in the terminal, it will show the journal logs in chronological order.
journalctl --no-pager will display entire logs directly on the screen. journalctl -n 25: will display most recent 25 lines of the logs. journalctl -f: view logs in real time. jouralctl --utc: display logs in UTC time.</description>
    </item>
    
    <item>
      <title>Let&#39;s learn: systemctl!</title>
      <link>https://dhar01.github.io/posts/all_about_systemctl/</link>
      <pubDate>Mon, 20 Mar 2023 11:30:03 +0600</pubDate>
      
      <guid>https://dhar01.github.io/posts/all_about_systemctl/</guid>
      <description>Service management sudo systemctl start app.service sudo systemctl stop app.service sudo systemctl restart app.service sudo systemctl reload app.service sudo systemctl reload-or-restart app.service sudo systemctl enable app.service sudo systemctl disable app.service Checking status systemctl status app.service systemctl is-active app.service systemctl is-enabled app.service systemctl is-failed app.service System state overview # see a list of active units systemctl list-units systemctl # returns same as above systemctl list-units --all systemctl list-units --all --state=inactive systemctl list-units --type=service To see every available units in the system paths (including those that systemd has not attempted to load):</description>
    </item>
    
    <item>
      <title>Let&#39;s learn: Vim/NeoVim!</title>
      <link>https://dhar01.github.io/posts/all_about_vim/</link>
      <pubDate>Wed, 08 Feb 2023 11:30:03 +0600</pubDate>
      
      <guid>https://dhar01.github.io/posts/all_about_vim/</guid>
      <description>Syntax: vim filename.
Movement Navigating h /j/k/l :
C-U/C-D : half-page up/down.
C-B/C-F : page up/down.
H : move to top of the screen.
M : move to middle of the screen.
L : move to bottom of the screen.
Words b/w : previous/next word.
ge/e : previous/next end of word.
gj : move cursor down (multi-line text).
gk : move cursor up (multi-line text).
Line $ : to the end of the line (including last character).</description>
    </item>
    
    <item>
      <title>Let&#39;s learn: Wildcards!</title>
      <link>https://dhar01.github.io/posts/all_about_wildcards/</link>
      <pubDate>Wed, 18 Jan 2023 11:30:03 +0600</pubDate>
      
      <guid>https://dhar01.github.io/posts/all_about_wildcards/</guid>
      <description>Wildcards (also known as globbing) allows us to select filenames based on patterns of characters.
Wildcard Meaning * matches any character ? matches any single character [characters] matches any character that is a member of the set characters [!characters] matches any character that is not a member of the set characters [[:class:]] matches any character that is a member of the specified class Commonly used character classes:
Character class meaning [:alnum:] matches any alphanumeric character [:alpha:] matches any alphabetic character [:digit:] matches any numeral [:lower:] matches any lowercase letter [:upper:] matches any UPPERCASE letter Examples [[:upper:]]* : Any file beginning with an uppercase letter.</description>
    </item>
    
    <item>
      <title>Let&#39;s learn: grep!</title>
      <link>https://dhar01.github.io/posts/all-about-grep/</link>
      <pubDate>Tue, 13 Dec 2022 11:30:03 +0600</pubDate>
      
      <guid>https://dhar01.github.io/posts/all-about-grep/</guid>
      <description>grep: Global Regular Expression print.
grep is a powerful program used to find text patterns within files. It uses regular expressions (shortly regex) to match the pattern.
When grep encounters a pattern in the file, it prints out the lines containing it. If no file is given, it will search recursively search the given pattern in the files in current directory.
grep pattern [file...] grep &amp;lt;search-pattern&amp;gt; file.txt To show the line number in the output, use -n option: grep -n &amp;lt;search-pattern&amp;gt; file.</description>
    </item>
    
    <item>
      <title>Let&#39;s learn: less!</title>
      <link>https://dhar01.github.io/posts/all_about_less/</link>
      <pubDate>Sun, 13 Nov 2022 11:30:03 +0600</pubDate>
      
      <guid>https://dhar01.github.io/posts/all_about_less/</guid>
      <description>The less command is a program to view text files.
Example:
less filename less /etc/passwd Some action commands for less:
Command Action Page Up or b Scroll back one page Page Down or space Scroll forward one page Up Arrow Scroll up one line Down Arrow Scroll down one line G Move to the end of the text file g or 1G Move to the beginning of the text file /characters search forward to the next occurrence of characters n search for the next occurrence of the previous search h display help screen q quit less less is more</description>
    </item>
    
    <item>
      <title>Let&#39;s learn: man pages!</title>
      <link>https://dhar01.github.io/posts/all_about_man-pages/</link>
      <pubDate>Thu, 13 Oct 2022 11:30:03 +0600</pubDate>
      
      <guid>https://dhar01.github.io/posts/all_about_man-pages/</guid>
      <description>man - display a program&amp;rsquo;s manual page.
man program # program is the name of the command On most Linux systems, man uses less to display manual page.
The manual that man displays is broken into sections and covers not only user commands but also system administration commands, programming interfaces, file formats and more.
Man page organization:
Section Contents 1 user commands 2 programming interfaces for kernel system calls 3 programming interfaces to the C library 4 special files such as device nodes and drivers 5 file formats 6 games and amusements such as screen savers 7 Miscellaneous 8 System administration commands 9 Obscure kernel specs and interfaces man section search_item man 5 passwd Refer to a specific section of the manual to find what we are looking for.</description>
    </item>
    
    <item>
      <title>Let&#39;s learn: Terminal Shortcuts!</title>
      <link>https://dhar01.github.io/posts/all_about_linux_terminal/</link>
      <pubDate>Sat, 23 Jul 2022 11:30:03 +0600</pubDate>
      
      <guid>https://dhar01.github.io/posts/all_about_linux_terminal/</guid>
      <description> To enter virtual consoles: Ctrl+Alt+F1 to Ctrl+Alt+F6 Switch from one to another console: Alt+F1 to Alt+F6 To return to the graphical desktop: Alt+F7 command meaning Ctrl+a beginning of the line Ctrl+c kill process/stop running Ctrl+d ending terminal session Ctrl+e end of line Ctrl+k cut from cursor to the end of line Ctrl+l clear screen Ctrl+u cut from cursor to the beginning of line Ctrl+w erase word from cursor to begin Ctrl+y get back from last cut text Ctrl+z froze the program/pause Alt+b backward one word Alt+d cut from cursor to end of word Alt+f forward one word Alt+backspace cut from cursor to beginning of the word Ctrl+shift+c copy from terminal Ctrl+shift+v paste on terminal </description>
    </item>
    
    <item>
      <title>Learning Git</title>
      <link>https://dhar01.github.io/posts/all_about_git/</link>
      <pubDate>Tue, 31 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://dhar01.github.io/posts/all_about_git/</guid>
      <description>SCM : Source Control Management.
VCS: Version Control System.
All of the content here is for command line, as I am very comfortable with terminal [and of course Linux].
Basic git syntax: program | action | destination.
For example: git | add | .
Configure git # set your name $ git config user.name &amp;#34;user-name&amp;#34; # set your email $ git config user.email &amp;#34;user-email@example.com&amp;#34; # set global user name $ git config --global user.</description>
    </item>
    
  </channel>
</rss>
