[{"content":"I often consider myself \u0026ldquo;Lucky\u0026rdquo; to be born in this era; the era of being connected, knowledge sharing and collaboration. While scrolling through the internet, I found so many well-written thoughts and blogs that should be shared. In my daily life, I\u0026rsquo;m trying to be a DevOps practitioner, to be a gopher and sharpen my knowledge of the basics.\nHere, I will share some resources, i.e., blogs I find amazing. Whether you\u0026rsquo;re a DevOps practitioner, SRE, Linux System Administrator or believe in self-development - these resources will significantly help you.\nEnjoy the readings!\nMisc Architecture notes School of SRE Linux Specific Others ","permalink":"https://dhar01.github.io/posts/be-better-version/","summary":"I often consider myself \u0026ldquo;Lucky\u0026rdquo; to be born in this era; the era of being connected, knowledge sharing and collaboration. While scrolling through the internet, I found so many well-written thoughts and blogs that should be shared. In my daily life, I\u0026rsquo;m trying to be a DevOps practitioner, to be a gopher and sharpen my knowledge of the basics.\nHere, I will share some resources, i.e., blogs I find amazing. Whether you\u0026rsquo;re a DevOps practitioner, SRE, Linux System Administrator or believe in self-development - these resources will significantly help you.","title":"Be better "},{"content":"As I edit system configuration files day to day basis, my number one choice for text editor is vim. So here\u0026rsquo;s a post about some common settings:\n\u0026#34; Number-related settings set number \u0026#34; Display line numbers set relativenumber \u0026#34; Display relative line numbers set signcolumn=yes \u0026#34; Always show the sign column \u0026#34; Search-related settings set hlsearch \u0026#34; Highlight search results set incsearch \u0026#34; Highlight search matches as you type set ignorecase \u0026#34; Ignore case when searching set smartcase \u0026#34; Ignore case only if search pattern is all lowercase \u0026#34; Appearance-related settings set laststatus=2 \u0026#34; Always show status line set cursorline \u0026#34; Highlight current line \u0026#34; set colorcolumn=80 \u0026#34; Display a vertical line at column 80 to help with line length set noerrorbells \u0026#34; Disable error bells and visual bells set wrap \u0026#34; Wrap long lines visually set linebreak \u0026#34; Break long lines at word boundaries \u0026#34; Window-related settings set splitright \u0026#34; Split windows to the right set splitbelow \u0026#34; Split windows below set scrolloff=5 \u0026#34; Keep 5 lines above/below cursor when scrolling set clipboard+=unnamed \u0026#34; Copy text to system clipboard set mouse=a \u0026#34; Enable mouse support \u0026#34; Completion-related settings set wildmenu \u0026#34; Show command-line completion options in a menu set wildmode=list:longest,full \u0026#34; Highlight and complete the longest common part of the options \u0026#34; Mode-related settings set showmode \u0026#34; Show current mode (insert/visual/command) in status line \u0026#34; Folding-related settings set foldmethod=indent \u0026#34; Use indent-based folding set foldlevelstart=99 \u0026#34; Start with all folds open \u0026#34; Wrapping-related settings set whichwrap+=\u0026lt;,\u0026gt;,h \u0026#34; Allow wrapping past the beginning or end of a line \u0026#34; Create a horizontal split with Ctrl+s nnoremap \u0026lt;C-s\u0026gt; :split\u0026lt;CR\u0026gt; \u0026#34; Create a vertical split with Ctrl+v nnoremap \u0026lt;C-v\u0026gt; :vsplit\u0026lt;CR\u0026gt; \u0026#34; Create a new horizontal split and start editing a new file with Ctrl+n nnoremap \u0026lt;C-n\u0026gt; :split\u0026lt;CR\u0026gt;:enew\u0026lt;CR\u0026gt; \u0026#34; Create a new vertical split and start editing a new file with Ctrl+m nnoremap \u0026lt;C-m\u0026gt; :vsplit\u0026lt;CR\u0026gt;:enew\u0026lt;CR\u0026gt; Thanks!\n","permalink":"https://dhar01.github.io/posts/common-vim-neovim-settings/","summary":"As I edit system configuration files day to day basis, my number one choice for text editor is vim. So here\u0026rsquo;s a post about some common settings:\n\u0026#34; Number-related settings set number \u0026#34; Display line numbers set relativenumber \u0026#34; Display relative line numbers set signcolumn=yes \u0026#34; Always show the sign column \u0026#34; Search-related settings set hlsearch \u0026#34; Highlight search results set incsearch \u0026#34; Highlight search matches as you type set ignorecase \u0026#34; Ignore case when searching set smartcase \u0026#34; Ignore case only if search pattern is all lowercase \u0026#34; Appearance-related settings set laststatus=2 \u0026#34; Always show status line set cursorline \u0026#34; Highlight current line \u0026#34; set colorcolumn=80 \u0026#34; Display a vertical line at column 80 to help with line length set noerrorbells \u0026#34; Disable error bells and visual bells set wrap \u0026#34; Wrap long lines visually set linebreak \u0026#34; Break long lines at word boundaries \u0026#34; Window-related settings set splitright \u0026#34; Split windows to the right set splitbelow \u0026#34; Split windows below set scrolloff=5 \u0026#34; Keep 5 lines above/below cursor when scrolling set clipboard+=unnamed \u0026#34; Copy text to system clipboard set mouse=a \u0026#34; Enable mouse support \u0026#34; Completion-related settings set wildmenu \u0026#34; Show command-line completion options in a menu set wildmode=list:longest,full \u0026#34; Highlight and complete the longest common part of the options \u0026#34; Mode-related settings set showmode \u0026#34; Show current mode (insert/visual/command) in status line \u0026#34; Folding-related settings set foldmethod=indent \u0026#34; Use indent-based folding set foldlevelstart=99 \u0026#34; Start with all folds open \u0026#34; Wrapping-related settings set whichwrap+=\u0026lt;,\u0026gt;,h \u0026#34; Allow wrapping past the beginning or end of a line \u0026#34; Create a horizontal split with Ctrl+s nnoremap \u0026lt;C-s\u0026gt; :split\u0026lt;CR\u0026gt; \u0026#34; Create a vertical split with Ctrl+v nnoremap \u0026lt;C-v\u0026gt; :vsplit\u0026lt;CR\u0026gt; \u0026#34; Create a new horizontal split and start editing a new file with Ctrl+n nnoremap \u0026lt;C-n\u0026gt; :split\u0026lt;CR\u0026gt;:enew\u0026lt;CR\u0026gt; \u0026#34; Create a new vertical split and start editing a new file with Ctrl+m nnoremap \u0026lt;C-m\u0026gt; :vsplit\u0026lt;CR\u0026gt;:enew\u0026lt;CR\u0026gt; Thanks!","title":"Most common Vim/Neovim Settings"},{"content":"As I am highly dependent on official documentation, I found that Apache Solr maintain an awesome documentation from which I learned a lot. Setting up SSL can be found here. I am writing this for easier step by step setup.\nHappy Searching!\nGenerate certificate \u0026amp; key From the official documentation, you can generate a self-signed certificate to test your setup. But for the trusted authority, generate a certificate and convert it to .pfx format, which is type PKCS12.\nAnd before starting Solr, we need to configure zookeeper.\nConfigure Zookeeper We must configure Solr cluster properties in Zookeeper so that Solr nodes know to communicate via SSL. After creating, setting up and starting Zookeeper, we need to setup urlScheme cluster-wide property to https before any Solr nodes start up.\nFor Unix, go to $solr_home and run,\nserver/scripts/cloud-scripts/zkcli.sh -zkhost server1:2181,server2:2181,server3:2181 -cmd clusterprop -name urlScheme -val https For existing collections, we can update cluster properties by using the Collections API (CLUSTERPROP):\nhttp://IP:8983/solr/admin/collections?action=CLUSTERPROP\u0026amp;name=urlScheme\u0026amp;val=https This command only needs to be run on one node of the cluster, the change will apply to all nodes.\nFrom SolrCloud documentation, you\u0026rsquo;ll find a way to setup SSL which is self-signed certificate. For production, we needed to setup SSL certificate from an authorized CA. You will have to buy Mulit-Domain SSL (SAN certificate) to cover SolrCloud setup. I\u0026rsquo;m going to share my experience on how did I setup SSL on our SolrCloud.\nOur SolrCloud was consisted of 3 servers. Suppose, they are:\n192.0.0.1 192.0.0.2 192.0.0.3 By accessing http://192.0.0.1:8983, we can access to Solr frontend. For three servers, there are three frontend. We have to secure\nConfigure Solr At this point, I think we all have set up zookeeper properly, have certificates and key at hand and didn\u0026rsquo;t start Solr. Now, let\u0026rsquo;s set up system properties of Solr in $solr_home/bin/solr.in.sh or, /etc/default/solr.in.sh:\nSOLR_SSL_ENABLED=true SOLR_SSL_KEY_STORE=/etc/solr-ssl.keystore.p12 # define your store path SOLR_SSL_KEY_STORE_PASSWORD=secret # use your store password SOLR_SSL_TRUST_STORE=/etc/solr-ssl.keystore.p12 # define your store path SOLR_SSL_TRUST_STORE_PASSWORD=secret # use your store password SOLR_SSL_NEED_CLIENT_AUTH=false SOLR_SSL_WANT_CLIENT_AUTH=false SOLR_SSL_CHECK_PEER_NAME=true Now, start Solr and it\u0026rsquo;s working.\nIf you use curl, see the official documentation section on how to use curl in case of SSL.\n","permalink":"https://dhar01.github.io/posts/set-up-ssl-for-solrcloud/","summary":"As I am highly dependent on official documentation, I found that Apache Solr maintain an awesome documentation from which I learned a lot. Setting up SSL can be found here. I am writing this for easier step by step setup.\nHappy Searching!\nGenerate certificate \u0026amp; key From the official documentation, you can generate a self-signed certificate to test your setup. But for the trusted authority, generate a certificate and convert it to .","title":"Set up SSL for SolrCloud"},{"content":"I wasn\u0026rsquo;t familiar with SolrCloud when I started working with this. When I started to learn it and working directly with it - I had done so many mistakes. Even setting up SolrCloud for production was a hassle for me (I\u0026rsquo;m a slow learner). But overtime, I got a hang of it and I think writing an up-to-date guide to set up SolrCloud on production server is a good idea.\nThe official documentation is amazing enough and you should read it. This post is very straight forward. If you want any explanation and want to know/learn more, please consult official documentation.\nLet\u0026rsquo;s get started.\n(I\u0026rsquo;m writing this guide with the experience of Linux servers)\nTo easily go to the installation directory, I put these on .bashrc:\nexport solr_home=/opt/solr PATH=/opt/solr/bin:$PATH export zookeeper_home=/opt/zookeeper PATH=/opt/zookeeper/bin:$PATH $ cd $zookeeper_home # will take to /opt/zookeeper $ cd $solr_home # will take to /opt/solr Note that, this solr_home and SOLR_HOME variable isn\u0026rsquo;t same.\nZookeeper To bring the SolrCloud into production, we need external zookeeper (not the embedded one) server to manage our configuration and coordination centrally. We\u0026rsquo;re going to work with 3 servers. We will install zookeeper and Apache Solr into all servers with same configuration.\nFirst, let\u0026rsquo;s configure our Apache Zookeeper. Install desired Java version according to the official documentation. At the time of writing, the latest Zookeeper and Solr - both needs Java 11.\n$ sudo apt install openjdk-11-jdk # check java version $ java -version Download the latest stable version from the official website. Notice that we don\u0026rsquo;t want the source (src) bundle, we need the binary (bin) version.\nInstallation and configuration It\u0026rsquo;s not recommended to work with them while on root. But I\u0026rsquo;m going to work as a root user. My installation directory will be under /opt.\n$ tar -xvf apache-zookeeper-*.tar.gz -C /opt $ ln -s /opt/apache-zookeeper-* /opt/zookeeper We need to create a configuration file for zookeeper under $zookeepr_home/conf/. The file name will be zoo.cfg:\ntickTime=2000 dataDir=/var/lib/zookeeper/data dataLogDir=/var/lib/zookeeper/logs clientPort=2181 4lw.commands.whitelist=mntr,conf,ruok initLimit=5 syncLimit=2 # put IP addresses or host on the place of Server1, Server2, Server3 server.1=Server-IP-1:2888:3888 server.2=Server-IP-2:2888:3888 server.3=Server-IP-3:2888:3888 autopurge.snapRetainCount=3 autopurge.purgeInterval=1 We will create a zookeeper environment file in the same place of zoo.cfg, which is under $zookeeper_home/conf. The file name will be zookeeper-env.sh:\nJAVA_HOME=\u0026#34;/usr/lib/jvm/java-1.11.0-openjdk-amd64\u0026#34; ZOO_LOG_DIR=\u0026#34;/var/lib/zookeeper/logs\u0026#34; ZOO_LOG4J_PROP=\u0026#34;INFO,ROLLINGFILE\u0026#34; # increaseing the file size limit to 50MiB JVMFLAGS=\u0026#34;$JVMFLAGS -Djute.maxbuffer=50000000\u0026#34; Create directories defined on the configuration:\nmkdir -p /var/lib/zookeeper/data mkdir -p /var/lib/zookeeper/logs Create a myid text file under /var/lib/zookeeper/datadirectory. Put the server id in that file with a single line. In case of server 2, the file will contain: 2\necho \u0026#34;2\u0026#34; \u0026gt;/var/lib/zookeeper/data/myid Now you can start zookeeper whenever you want but it need to be started before Solr.\n$ cd $zookeeper_home $ bin/zkServer.sh start Apache SolrCloud Download latest Solr (bin version) on the server, move file to the /opt and extract it.\n$ tar xzf solr-*.tgz solr-*/bin/install_solr_service.sh --strip-components=2 Install it under /opt.\n$ sudo bash ./install_solr_service.sh solr-*.tgz $ ln -s solr-*/ solr Edit bin/solr.in.sh for some configuration. We can also set this system wide by creating a file under /etc/default.\n#writing include file SOLR_PID_DIR=/var/solr SOLR_HOME=/var/solr/data #LOG SETTINGS LOG4J_PROPS=/var/solr/log4j2.xml SOLR_LOGS_DIR=/var/solr/logs SOLR_HEAP=\u0026#34;1g\u0026#34; SOLR_JAVA_HOME=\u0026#34;/usr/lib/jvm/java-1.11.0-openjdk-amd64\u0026#34; ZK_HOST=\u0026#34;zk-server1:2181,zk-server2:2181,zk-server3:2181\u0026#34; SOLR_LOG_LEVEL=INFO # Data backup location for replication environment SOLR_OPTS=\u0026#34;$SOLR_OPTS -Dsolr.allowPaths=/mnt/solr_backup\u0026#34; # for soft commits SOLR_OPTS=\u0026#34;$SOLR_OPTS -Dsolr.autoSoftCommit.maxTime=10000\u0026#34; SOLR_HOST=\u0026#34;zk-server-ip\u0026#34; # current server IP address SOLR_JAVA_MEM=\u0026#34;-Xms2g -Xmx2g\u0026#34; ZK_CLIENT_TIMEOUT=\u0026#34;30000\u0026#34; SOLR_PORT=8983 # To make available on the public internet SOLR_JETTY_HOST=\u0026#34;0.0.0.0\u0026#34; # set this up in case if you set up authentication. # By setting this, the script will run without error SOLR_AUTH_TYPE=\u0026#34;basic\u0026#34; SOLR_AUTHENTICATION_OPTS=\u0026#34;-Dbasicauth=username:password\u0026#34; Create directories defined in the configuration:\n$ mkdir -p /var/solr/data $ mkdir -p /var/solr/logs And it\u0026rsquo;s done.\nYou have to configure all servers like this.\nStart SolrCloud by using the script:\n$ bin/solr start -c -p 8983 -s /var/solr/data -z zk1:2181,zk2:2181,zk3:2181 -force To get help:\nbin/solr start -help bin/solr restart -help # you got the point how to get help I hope you are able to get the SolrCloud running without any errors.\nUse bin/solr script to interact with Solr and Zookeeper. To know more, use official documentation.\nTo create a collection:\n$ bin/solr create_collection -c col_name -d _default -shards 1 -replicationFactor 3 -p 8983 -V -force To delete a collection:\n$ bin/solr delete -c col_name -deleteConfig true -p 8983 -V That\u0026rsquo;s all. I will try to update this post from time to time. I\u0026rsquo;m also planning to include some useful commands later.\nHope, things are working.\nHappy searching!\n","permalink":"https://dhar01.github.io/posts/set-up-solrcloud-for-production/","summary":"I wasn\u0026rsquo;t familiar with SolrCloud when I started working with this. When I started to learn it and working directly with it - I had done so many mistakes. Even setting up SolrCloud for production was a hassle for me (I\u0026rsquo;m a slow learner). But overtime, I got a hang of it and I think writing an up-to-date guide to set up SolrCloud on production server is a good idea.","title":"Setting Up SolrCloud for Production"},{"content":"SCM : Source Control Management.\nVCS: Version Control System.\nAll of the content here is for command line, as I am very comfortable with terminal [and of course Linux].\nBasic git syntax: program | action | destination.\nFor example: git | add | .\nConfigure git # set your name $ git config user.name \u0026#34;user-name\u0026#34; # set your email $ git config user.email \u0026#34;user-email@example.com\u0026#34; # set global user name $ git config --global user.name \u0026#34;username\u0026#34; # set global user email $ git config --global user.email \u0026#34;user-email\u0026#34; Basic # to check git version $ git --version # initializing git repository $ git init # check status of the git repo $ git status # clone remote repo to your machine $ git clone [url] # Add all files at once $ git add . # Add specific files by name $ git add {file-name/path-to-file} # commit all the files $ git commit -m \u0026#34;messages you want to write\u0026#34; # to correct/amend commit message $ git commit --amend -m \u0026#34;your message\u0026#34; # commit with title \u0026amp; description $ git commit -m \u0026#34;Title\u0026#34; -m \u0026#34;Description...\u0026#34; # to view specific commit $ git show {commit-ID} # to update every change $ git add -u # to remove file $ git rm {file-name} # remove file from git staging area $ git rm --cached {file-name} # to untrack all files in git-ignore $ git rm -r --cached . # restore staged file $ git restored -staged {file-name} # configure git to ignore specific file $ echo {file-name} \u0026gt;\u0026gt; .gitignore # to move or rename file $ git mv {old-file-name} {new-file-name} # to restore file from last commit $ git checkout -- {file-name} # to restore all file from last commit $ git checkout -- . # to restore file from a commit and move to current branch $ git checkout {commit-ID} -- {file-name} # check help menu $ git help log Update \u0026amp; Delete # to test delete untracked file $ git clean -n # to delete untracked file $ git clean -f # to unstage / undo adds $ git reset HEAD {file-name} Git Log # list of git log $ git log # view logs in oneline (awesome!) $ git log --oneline # list of changed files $ git log --name-only # to view commit log in one line with full SHA-1 format $ git log --format=oneline # to view changes $ git log -p # to view commits of a specific file $ git log {file-name} # to view all commits of a specific file $ git log -p {file-name} # to view status \u0026amp; summary of commits $ git log --stat $ git log --stat --summary # to view commit history in graph $ git log --graph # to view summary of commit history in graph $ git log --oneline --graph --all --decorate # view previous commit history $ git log --graph --decorate Git Branch # create a new branch $ git branch {branch-name} # switch to an existing branch $ git checkout {branch-name} $ git switch {branch-name} # new # create a new branch and swithc to it $ git checkout -b {branch-name} # rename branch $ git branch -m {branch-name} {new-branch-name} $ git branch --move {old-branch-name} {new-branch-name} # to show all branches that are merged into current branch $ git branch --merged # delete a branch $ git branch -d {branch-name} # list all branches $ git branch # view all branches - local \u0026amp; remote $ git branch -a # to remove remote branch $ git push --delete origin {branch-name} # to delete unmerged branch $ git branch -D {branch-name-to-delete} HEAD is where we right now in the repository. The HEAD points to the last commit in the branch we are currently on.\nGit Merge There are two types of merging:\nFast-forward-merge: It happens when current branch has no extra commits compared to the branch we\u0026rsquo;re merging.\nNo-fast-forward-merge: If the master branch has new changes which other branch doesn\u0026rsquo;t have, git will commit no-fast-forward merge.\n# first checkout to master branch $ git checkout master # merging $ git merge {branch-name} # to merge on master branch (only if fast forward) $ git merge --ff-only {branch-name} # merging on master branch (forcing a new commit) $ git merge --no-ff {branch-name} # to stop merge (in case of conflicts) $ git merge --abort $ git reset --merge # prior to v1.7.4 # to undo local merge $ git reset --hard {branch-name} # to merge a specific commit $ git cherry-pick {commit-ID} # rebase $ git checkout {branch-name} \u0026gt;\u0026gt; git rebase main # to cancel rebase $ git rebase --abort # Squash multiple commit to one commit $ git rebase -i HEAD~3 # to squash merge in one commit $ git merge --squash {branch-name} # (and commit afterwards) Git Stash # save into stash $ git stash save \u0026#34;message\u0026#34; $ git stash # show list of the stash $ git stash list # view all stash $ git stash show # show status of a specific stash $ git stash show {stash-ID} # show changes on stash $ git stash show -p {stash-ID} # to bring all stash $ git stash pop # bring/get back to specific stash $ git stash pop {stash-ID} # to use specific stash without dropping $ git stash apply {stash-ID} # use custom stash and index $ git stash apply --index # create new branch from stash $ git stash branch {new-branch} # to delete 1st item of stash list $ git stash drop # to delete specific stash from stash list $ git stash drop {stash-ID} # to delete the whole stash $ git stash clear Reflog I have nothing to say about this section. Ultimate weapon\ngit reflog git reset --hard {ssh-link} Git Compare # show difference $ git diff {commit-ID} {commit-ID} # compare modified files and highlight changes $ git diff --color-words {file-name} # view the difference between last commit and staged version $ git diff --staged # to compare branches $ git diff main..{branch-name} Working with remote repository # initilizing remote repository $ git remote add origin {connection-string.git} # list remote repository $ git remote -v # pushing repository $ git push origin master/main # clone repo $ git clone {ssh-link} # update the repo $ git fetch origin master # fetch \u0026amp; merge remote changes $ git pull origin master Using SSH git remote -v git remote set-url origin git@github.com:username/repo-name.git No need to give password every time.\nGit Settings with GitHub Silly, but this section is for myself. 🤐\nssh-keygen -t rsa -b 4096 -C \u0026#34;githubMail\u0026#34; eval \u0026#34;$(ssh-agent -s)\u0026#34; ssh-add ~/.ssh/id_rsa vim .ssh/id_rsa.pub # copy the value inside ssh -T git@github.com ","permalink":"https://dhar01.github.io/posts/all_about_git/","summary":"SCM : Source Control Management.\nVCS: Version Control System.\nAll of the content here is for command line, as I am very comfortable with terminal [and of course Linux].\nBasic git syntax: program | action | destination.\nFor example: git | add | .\nConfigure git # set your name $ git config user.name \u0026#34;user-name\u0026#34; # set your email $ git config user.email \u0026#34;user-email@example.com\u0026#34; # set global user name $ git config --global user.","title":"Learning Git"},{"content":"When I wanted to customize my GitHub profile, I visited many developers\u0026rsquo; GitHub profiles and used to see some badges which seems cool to me. When I looked at the code behind the profiles, I didn\u0026rsquo;t have the slightest idea what was going on. Later, I tried to copy some of the code and paste them into my code, but it couldn\u0026rsquo;t solve the need.\nWell, after some reading and searching, I was able to understand how to make them. Now I am writing this post as a reference so that one can understand how to make those badges including me.\nStep 01 : Finding icons/logo The first thing we need to do to make badges is to find if the logo image is available for shields.io. I use simple icons site. You can search for the logo to see if it\u0026rsquo;s\u0026rsquo; available on their site.\nStep 02 : The URL If the icon is available, we are ready to start building badges. The first part of the URL that will precede all your badges is given below:\nhttps://img.shields.io/badge/ Following the first part, we are going to add a dash (-). After the dash, we will write the name which we want to be appear on the badge (case-sensitive).\nSuppose, we want to write Linux on badge:\nhttps://img.shields.io/badge/-Linux To write more than one word, we need to add %20 instead of space:\nhttps://img.shields.io/badge/-Amazon%20Prime Step 03 : The Color We need color for our badge background. The shields.io accepts named colors and hex codes. Some of the named colors are: green, brightgreen, yellowgreen, yellow, orange, red, blue, lightgrey, grey/gray, success, important, critical, informational, inacticve, black, blueviolet, etc.\nFor some more named colors and hex codes, see here.\nTo add the named colors or the hex codes, we need to add a dash (-):\nhttps://img.shields.io/badge/-Linux- On Simple Icons website, you will find the official color (and hex code) for that specific icon which can be used.\nStep 04 : The Logo After finding the logo, it\u0026rsquo;s time to add the logo name. There are two types of name one will find there:\nSingle name. For example: Linux. Name with more than one word. For example: Visual Studio Code. For single name, it\u0026rsquo;s very simple to add:\nhttps://img.shields.io/badge/-Git-F05032?logo=git For more than one word, you have to add a dash (-) between words:\nhttps://img.shields.io/badge/-Kali%20Linux-557C94?logo=Kali-Linux Step 05 : The Logo Color One can also define a color for logo by doing \u0026amp;logoColor=\u0026lt;color\u0026gt; at the end of the url.\nhttps://img.shields.io/badge/-Kali%20Linux-557C94?logo=Kali-Linux\u0026amp;logoColor=white Step 06 : Other Stylings Other than colors, there are some more styling of the badges:\nThe flat style The Plastic Button style Squared Bold Style Squared Style https://img.shields.io/badge/-Kali%20Linux-557C94?logo=Kali-Linux\u0026amp;logoColor=white\u0026amp;style=flat One can also add width for the logo by adding \u0026amp;logoWidth=\u0026lt;amount-of-pixels\u0026gt;.\nTo get a view of my GitHub profile, visit here: Loknath Dhar\n","permalink":"https://dhar01.github.io/posts/custom-badges-github-profile/","summary":"When I wanted to customize my GitHub profile, I visited many developers\u0026rsquo; GitHub profiles and used to see some badges which seems cool to me. When I looked at the code behind the profiles, I didn\u0026rsquo;t have the slightest idea what was going on. Later, I tried to copy some of the code and paste them into my code, but it couldn\u0026rsquo;t solve the need.\nWell, after some reading and searching, I was able to understand how to make them.","title":"Making custom badges using shields.io"},{"content":" Everyone should learn how to search.\n(This post contains some google dorking techniques for finding information on the internet. Google is your friend.)\nSearching Narrow down search query, use \u0026quot;_something_\u0026quot;. Ex: \u0026quot;Liverpool\u0026quot;\nFor exact topic and site:\nsite: website-name topic-name site: geekforgeeks sql Some terms Term Action filetype: search for a file by its extension cache: view google\u0026rsquo;s cached version of a specified URL intitle: the specified phrase MUST appear in the title of the page allintext: searches specific text contained on any web page allintitle: show pages that contain titles with X characters allinurl: used to fetch results whose URL contains all the specified characters inurl: useful for single keyword, same as allinurl intitle: used to search for various keywords inside the title inanchor: useful when need to search for an exact anchor text used on any links. intext: useful to locate pages that contain characters or strings inside their text site: show the full list of all indexed URLs for the specified domain or sub-domain * wildcard used to search pages that contain anything before your word | logical operator, will show all the sites which contain both words + used to concatenate words, useful to detect pages that use more than specific key - used to avoiding showing results that contain certain words For example, searching for movies in online servers:\nintitle:index of movie-name intitle:index of? movie-name.mkv More examples Keyword related To find similar websites, use related: Ex: related:freecodecamp.org\nKeyword search: To search within a website, use search:d Ex: search:freecodecamp.org web development\nKeyword ... To search within a time-frame, use ... Ex: Developers 1992... 1999\nKeyword - To exclude a word, use - Ex: Android Development -Flutter\nKeyword * To replace missing words, use * Ex: *oriented programming in python\nKeyword define: To find a definition, use define: Ex: define:object oriented programming\nKeyword \u0026quot; \u0026quot; To find exact phase, use \u0026quot; \u0026quot; Ex: \u0026quot;python free tutorials\u0026quot;\nKeyword site: To search for a particular website or content, use site: Ex: site: web dev blog\n","permalink":"https://dhar01.github.io/posts/google-fu/","summary":"Everyone should learn how to search.\n(This post contains some google dorking techniques for finding information on the internet. Google is your friend.)\nSearching Narrow down search query, use \u0026quot;_something_\u0026quot;. Ex: \u0026quot;Liverpool\u0026quot;\nFor exact topic and site:\nsite: website-name topic-name site: geekforgeeks sql Some terms Term Action filetype: search for a file by its extension cache: view google\u0026rsquo;s cached version of a specified URL intitle: the specified phrase MUST appear in the title of the page allintext: searches specific text contained on any web page allintitle: show pages that contain titles with X characters allinurl: used to fetch results whose URL contains all the specified characters inurl: useful for single keyword, same as allinurl intitle: used to search for various keywords inside the title inanchor: useful when need to search for an exact anchor text used on any links.","title":"Google Dorking (finding information) - OSINT"},{"content":"The SELECT statement is used to query the database and retrieve data that match the criteria.\nThe SELECT statement has five main clauses to choose from.\nFormat of the SELECT statement:\nSELECT [ALL | DISTINCT] column1[,column2] FROM [table1, table2] [WHERE \u0026#34;conditions\u0026#34;] [GROUP BY \u0026#34;column-list\u0026#34;] [HAVING \u0026#34;conditions] [ORDER BY \u0026#34;column-list\u0026#34; [ASC | DESC] ] Example:\nSELECT name, age, salary FROM employee WHERE age \u0026gt; 40; ALL and DISTINCT are keywords used to select either all (default) or the distinct or unique records in query results.\nDISTINCT DISTINCT will discard the duplicate records for the columns specified after the SELECT statement.\nSELECT DISTINCT age FROM employee_info; Aggregate functions Function Description MIN returns the smallest value in a given column MAX returns the largest value in a given column SUM returns the sum of the numeric values in a given column AVG returns the average value of a given column COUNT returns the total number of values in a given column COUNT(*) returns the number of rows in a table Aggregate functions are used to compute against a returned column of numeric data from SELECT statement. They summarize the results of a particular column of selected data.\nExample:\nSELECT AVG(salary) FROM employee WHERE title = \u0026#39;Programmer\u0026#39;; This statement will return the number of rows in the employees table:\nSELECT Count(*) FROM employee; GROUP BY The GROUP BY clause will gather all of the rows together that contain data in the specified columns and will allow aggregate to be performed on the one or more columns.\nSELECT column1, SUM (column2) FROM \u0026#34;list-of-tables\u0026#34; GROUP BY \u0026#34;column-list\u0026#34;; Multiple grouping columns example:\nSELECT last_name, MAX(salary), dept FROM employee GROUP BY dept, last_name; HAVING The HAVING clause allows to specify conditions on the rows for each group. Which rows should be selected will be based on the conditions.\nThe HAVING clause should follow the GROUP BY clause.\nSELECT column1, SUM(column2) FROM \u0026#39;list-of-tables\u0026#39; GROUP BY \u0026#34;column-list\u0026#34; HAVING \u0026#34;condition\u0026#34;; Example:\nSELECT dept, AVG(salary) FROM employee GROUP BY dept HAVING AVG(salary) \u0026gt; 20000; ORDER BY ORDER BY is an optional clause which will allow to display the results of query in a sorted order based on the columns.\nSyntax:\nSELECT column1, SUM(column2) FROM \u0026#34;list-of-tables\u0026#34; ORDER BY \u0026#34;column-list\u0026#34; [ASC | DESC]; Example:\nSELECT employee_id, dept, name, age, salary FROM employee_info WHERE dept = \u0026#39;Sales\u0026#39; ORDER BY salary, age DESC; combining conditions \u0026amp; boolean operators The AND operator can be used to join two or more conditions in the WHERE clause.\nSELECT column1, SUM(column2) FROM \u0026#34;list-of-tables\u0026#34; WHERE \u0026#34;condition1\u0026#34; AND \u0026#34;condition2\u0026#34;; The OR operator can be used to join two or more conditions in the WHERE clause.\nSELECT employeeid, firstname, lastname, title, salary FROM employee_info WHERE (salary \u0026gt;= 45000.00) OR (title = \u0026#39;Programmer\u0026#39;); IN \u0026amp; BETWEEN The IN conditional operator is a set membership test operator. It is used to test whether or not a value is in the list of values provided after the keyword IN.\nSELECT employeeid, lastname, salary FROM employee_info WHERE lastname IN (\u0026#39;Hernandez\u0026#39;, \u0026#39;Jones\u0026#39;, \u0026#39;Roberts\u0026#39;, \u0026#39;Ruiz\u0026#39;); One can also use NOT IN to exclude the rows in the list.\nThe BETWEEN conditional operator is used to test to see whether or not a value is between the two values stated after the keyword BETWEEN.\nSELECT employeeid, age, lastname, salary FROM employee_info WHERE age BETWEEN 30 AND 40; Mathematical Functions Standard ANSI SQL-92 supports the following first basic arithmetic operators:\n+ : addition - : subtraction * : multiplication / : division I am adding some functions which are not standard but they were available on several major database systems:\nname description ABS[x] returns the absolute value of x SIGN[x] returns the sign of input x as -1, 0 or 1 MOD[x, y] modulo operator (same as x%y) FLOOR[x] returns the largest integer value that is less than or equal to x CEIL[x] or CEILING[x] returns the smallest integer value that is greater than or equal to x POWER[x, y] returns the value of x ** y ROUND[x] returns the value of x rounded to the nearest whole integer ROUND[x, d] returns the value of x rounded to the number of decimal places specified by the value d SQRT[x] returns the square-root value of x Example:\nSELECT ROUND(salary), firstname FROM employee_info JOIN The JOIN makes relational database systems relational.\nJoin allows to link data from two or more tables together into a single query result from one single SELECT statement.\nSELECT \u0026#34;list-of-columns\u0026#34; FROM table1, table2 WHERE \u0026#34;search-condition\u0026#34;; Single table database is sometimes referred to as flat table.\nSELECT customer_info.firstname, customer_info.lastname, purchases.item FROM customer_info, purchases WHERE customer_info.customer_number = purchases.customer_number; This join is known as an Inner Join or Equijoin.\nAlthough the above will probably work, here is the ANSI SQL-92 syntax specification for an Inner Join using the preceding statement:\nSELECT customer_info.firstname, customer_info.lastname, purchases.item FROM customer_info INNER JOIN purchases ON customer_info.customer_number = purchases.customer_number; ","permalink":"https://dhar01.github.io/posts/sql-overview-select/","summary":"The SELECT statement is used to query the database and retrieve data that match the criteria.\nThe SELECT statement has five main clauses to choose from.\nFormat of the SELECT statement:\nSELECT [ALL | DISTINCT] column1[,column2] FROM [table1, table2] [WHERE \u0026#34;conditions\u0026#34;] [GROUP BY \u0026#34;column-list\u0026#34;] [HAVING \u0026#34;conditions] [ORDER BY \u0026#34;column-list\u0026#34; [ASC | DESC] ] Example:\nSELECT name, age, salary FROM employee WHERE age \u0026gt; 40; ALL and DISTINCT are keywords used to select either all (default) or the distinct or unique records in query results.","title":"SQL Overview - 02"},{"content":"This is a note type post for personal reference. I am learning SQL right now and for the learning purpose, I chose two websites:\nSQL Course; SQLBolt; For awesome learning experience, my advice is to follow one of them according to your preference. This post is just a summary of those content.\nAlso, if anyone wants to practice SQL, see Hackerrank\u0026rsquo;s SQL problem-set.\nThis is still in the early stage. Any suggestions will be appreciated.\n(update 31 Mar, 2022): I got an awesome website: check Animate SQL!\nA relational database system contains one or more objects called tables. Tables are identified by their names and are comprised of columns and rows.\nSELECT The SELECT statement is used to query the database and retrieve selected data that match the criteria we specify.\nAll statements end with an ;.\nSELECT column FROM table_name; Use * to select all columns.\nWHERE The WHERE clause specifies which data or rows will be returned or displayed based on the criteria described after the keyword WHERE.\nConditional selections used in the WHERE clause:\nSign Meaning = Equal \u0026gt; Greater than \u0026lt; Less than \u0026gt;= Greater than or equal \u0026lt;= Less than or equal \u0026lt; \u0026gt; Not equal to LIKE see details below The LIKE pattern matching operator can also be used in the conditional selection of the where clause.\nIt is a very powerful operator that allows selecting only rows that are like what is specified. The percent sign (%) can be used as a wild card to match any possible character that might appear before or after the characters specified.\nSELECT first, last, city FROM employee_info WHERE first LIKE \u0026#39;Er%\u0026#39;; CREATE TABLE The CREATE TABLE statement is used to create a new table.\nCREATE TABLE table_name ( column1 data_type, column2 data_type, column3 data_type ); Example:\nCREATE TABLE employees ( name varchar(30), position varchar(30), age number(3), salary(8,2) ); Common data types:\ntype description char (size) Fixed-length character string, size is specified in parenthesis. Max 255 bytes. varchar (size) Variable-length character string. Max size is specified in parenthesis. number (size) Number value with a max number of column digits specified in parenthesis. date Date value number (size, d) Number value with a maximum number of digits of size total, with a maximum number of d digits to the right of the decimal. A constraint is a rule associated with a column that the data entered into that column must follow the rules.\nINSERT INTO a table The INSERT INTO statement is used to insert or add a row of data into the table.\nINSERT INTO table_name (first_column, .... last_column) VALUES (first_value, .... last_value); All strings should be enclosed between single quotes 'string'.\nExample:\nINSERT INTO employees (name, position, age, salary) VALUES (\u0026#39;Dirk Smith\u0026#39;, \u0026#39;Programmer\u0026#39;, 32, 45300.00), (\u0026#39;Lokanth Dhar\u0026#39;, \u0026#39;Admin\u0026#39;, 26, 35000.00), (\u0026#39;Muidul Islam\u0026#39;, \u0026#39;Doctor\u0026#39;, 26, 40000.00); UPDATE records The UPDATE statement is used to update or change records that match specified criteria.\nUPDATE table_name SET column_name = new_value, next_column = new_value2 WHERE column_name OPERATOR value and|or column OPERATOR value; Example:\nUPDATE phone_book SET area_code = 623 WHERE prefix = 979; UPDATE phone_book SET last_name = \u0026#39;Smith\u0026#39;, prefix = 555, suffix = 9292 WHERE last_name = \u0026#39;Jones\u0026#39;; DELETE records The DELETE statement is used to delete records or rows from the table.\nDELETE FROM table_name WHERE column_name OPERATOR value; example:\nDELETE FROM employee; -- all records will be deleted DELETE FROM employee WHERE first_name = \u0026#39;Mike\u0026#39; or first_name = \u0026#39;Eric\u0026#39;; To insert comment, use --\nDROP a table The DROP TABLE command is used to delete a table and all rows in the table.\nTo delete an entire table including all of its rows:\nDROP TABLE table_name ","permalink":"https://dhar01.github.io/posts/sql-overview-basic/","summary":"This is a note type post for personal reference. I am learning SQL right now and for the learning purpose, I chose two websites:\nSQL Course; SQLBolt; For awesome learning experience, my advice is to follow one of them according to your preference. This post is just a summary of those content.\nAlso, if anyone wants to practice SQL, see Hackerrank\u0026rsquo;s SQL problem-set.\nThis is still in the early stage. Any suggestions will be appreciated.","title":"SQL Overview - 01"},{"content":"👋 Hey there I’m Loknath, a Linux enthusiast who bleeds Liverpool RED on matchday! Trying to be a programmer with Golang, also an infrequent writer. I enjoy cinema, and anime, can’t live without songs, and buy more books than I read. I feel like dancing on the occasion of playing Fifa, sometimes craving for the smell and sounds of rain, and most of the time, haha, for off days.\nIn the daytime, I would love to see myself as a storyteller, but in reality, I pass my days as Jr. DevOps Engineer and wonder when I will build a good project (I am pretty bad at programming but trying my best). One special thing about me if you ask, I don\u0026rsquo;t know much about operating a Windows system. Always had a Linux heart beating inside me!\nFear not! I may not be a go-to-help-for-windows-system type of guy, but hey, I\u0026rsquo;m open for some DevOps, InfoSec, Golang moments! Everything will be much better if you\u0026rsquo;re a Football fan, just drop me a line over telegram, I\u0026rsquo;m about always available there!\nNice to meet you!\n🗃 At the moment 📘 reading Head First Go, having a good time with this! 🤖 also, following Learn go with tests; trying to develop Test Driven Development (TDD) mindset from the beginning. 🔜 very exited for the upcoming COSMIC DE by system76! Love the working flow! 📺 watching Don\u0026rsquo;t F*ck with cats: Hunting an internet killer; sorry for the language, that\u0026rsquo;s the title of the series! ⚒️‍ Daily stack/tools Linux (ubuntu server), Apache SolrCloud, Nginx, Amazon Cloudfront, Bash, Zabbix, Git, GitLab.\n🌻 Things I love (I\u0026rsquo;m not sure if this section is right or not, but I think it\u0026rsquo;s fun so why not!)\nFootball Club: Liverpool. Language: Bash, Golang, Python. OS: Pop!_OS Browser: Firefox Text Editor: Neovim Bengali Font: Atma Programming Font: JetBrains Mono Terminal Font: Iosevka Term Nerd 📕 Blog Static website generator: Hugo Theme of the website: hugo-PaperMod Host: GitHub For photos: Unsplash, Pexels For icons: Simple Icons ","permalink":"https://dhar01.github.io/about/","summary":"👋 Hey there I’m Loknath, a Linux enthusiast who bleeds Liverpool RED on matchday! Trying to be a programmer with Golang, also an infrequent writer. I enjoy cinema, and anime, can’t live without songs, and buy more books than I read. I feel like dancing on the occasion of playing Fifa, sometimes craving for the smell and sounds of rain, and most of the time, haha, for off days.\nIn the daytime, I would love to see myself as a storyteller, but in reality, I pass my days as Jr.","title":"👨‍💻 The man or the mind behind.."},{"content":"In my Computer Graphics class, the teacher asked us to setup Codeblocks for the glut. She gave us a tutorial on how to setup Codeblocks on windows but didn\u0026rsquo;t provide any suggestion to set up on Linux. After some searching on google, I was able to setup Codeblocks with Freeglut (which is an alternative to Glut and available on Linux). This is a kind of writeup (or tutorial) on how I was able to setup Codeblocks with Freeglut.\nThis setup is tested and working on Pop os, as of writing, should be working with Ubuntu/Debian with the latest Codeblocks.\nAlso, I linked to the posts from where I collect these and setup Codeblocks to work properly.\nInstallation Part To work with all of these, of course, we have to install all the necessary files.\nFor Freeglut:\nsudo apt install g++ freeglut3 freeglut3-dev sudo apt install libxmu-dev libxi-dev For Codeblocks:\nsudo apt install codeblocks For OpenGL:\nsudo apt install build-essential libgl1-mesa-dev sudo apt install libglew-dev libsdl2-dev libsdl2-image-dev libglm-dev libfreetype6-dev # some libraries Check OpenGL installation:\nglxinfo | grep OpenGL Setup Part Open Codeblocks, go to settings \u0026gt; Global Variables. Click new, it should look like this:\ntype freeglut, press ok and setup the rest like this:\nNow close the Codeblocks.\nResting part is collected from here.\nGo to /usr/share/codeblocks/templates, create the file freeglut.cbp and put the following code there: \u0026lt;?xml version=\u0026#34;1.0\u0026#34; encoding=\u0026#34;UTF-8\u0026#34; standalone=\u0026#34;yes\u0026#34; ?\u0026gt; \u0026lt;CodeBlocks_project_file\u0026gt; \u0026lt;FileVersion major=\u0026#34;1\u0026#34; minor=\u0026#34;4\u0026#34; /\u0026gt; \u0026lt;Project\u0026gt; \u0026lt;Option title=\u0026#34;freeglut\u0026#34; /\u0026gt; \u0026lt;Option pch_mode=\u0026#34;0\u0026#34; /\u0026gt; \u0026lt;Option compiler=\u0026#34;gcc\u0026#34; /\u0026gt; \u0026lt;Build\u0026gt; \u0026lt;Target title=\u0026#34;default\u0026#34;\u0026gt; \u0026lt;Option output=\u0026#34;freeglut.exe\u0026#34; /\u0026gt; \u0026lt;Option type=\u0026#34;0\u0026#34; /\u0026gt; \u0026lt;Option compiler=\u0026#34;gcc\u0026#34; /\u0026gt; \u0026lt;Option includeInTargetAll=\u0026#34;1\u0026#34; /\u0026gt; \u0026lt;/Target\u0026gt; \u0026lt;/Build\u0026gt; \u0026lt;Compiler\u0026gt; \u0026lt;Add directory=\u0026#34;$(#freeglut.include)\u0026#34; /\u0026gt; \u0026lt;/Compiler\u0026gt; \u0026lt;Linker\u0026gt; \u0026lt;Add library=\u0026#34;freeglut\u0026#34; /\u0026gt; \u0026lt;Add library=\u0026#34;glu32\u0026#34; /\u0026gt; \u0026lt;Add library=\u0026#34;opengl32\u0026#34; /\u0026gt; \u0026lt;Add library=\u0026#34;winmm\u0026#34; /\u0026gt; \u0026lt;Add library=\u0026#34;gdi32\u0026#34; /\u0026gt; \u0026lt;Add library=\u0026#34;user32\u0026#34; /\u0026gt; \u0026lt;Add library=\u0026#34;kernel32\u0026#34; /\u0026gt; \u0026lt;Add directory=\u0026#34;$(#freeglut.lib)\u0026#34; /\u0026gt; \u0026lt;/Linker\u0026gt; \u0026lt;Unit filename=\u0026#34;main.cpp\u0026#34;\u0026gt; \u0026lt;Option compilerVar=\u0026#34;CPP\u0026#34; /\u0026gt; \u0026lt;Option target=\u0026#34;default\u0026#34; /\u0026gt; \u0026lt;/Unit\u0026gt; \u0026lt;/Project\u0026gt; \u0026lt;/CodeBlocks_project_file\u0026gt; Save it.\nCreate a directory named freeglut on /usr/share/codeblocks/templates/wizard/. You will find another directory named glut there. Copy all the contents and paste it on the newly created freeglut directory.\nNow go to the created freeglut directory, edit the wizard.script file and paste the following:\n//////////////////////////////////////////////////////////////////////////////// // // FreeGLUT project wizard // //////////////////////////////////////////////////////////////////////////////// // globals FreeGlutPathDefault \u0026lt;- _T(\u0026#34;$(#freeglut)\u0026#34;); FreeGlutPathDefaultInc \u0026lt;- _T(\u0026#34;$(#freeglut.include)\u0026#34;); FreeGlutPathDefaultLib \u0026lt;- _T(\u0026#34;$(#freeglut.lib)\u0026#34;); FreeGlutPath \u0026lt;- _T(\u0026#34;\u0026#34;); function BeginWizard() { local intro_msg = _T(\u0026#34;Welcome to the new FreeGLUT project wizard!\\n\\n\u0026#34; + \u0026#34;This wizard will guide you to create a new project\\n\u0026#34; + \u0026#34;using the FreeGLUT OpenGL extensions.\\n\\n\u0026#34; + \u0026#34;When you \u0026#39;re ready to proceed, please click \\\u0026#34;Next\\\u0026#34;...\u0026#34;); local glutpath_descr = _T(\u0026#34;Please select the location of FreeGLUT on your computer.\\n\u0026#34; + \u0026#34;This is the top-level folder where FreeGLUT was installed (unpacked).\\n\u0026#34; + \u0026#34;To help you, this folder must contain the subfolders\\n\u0026#34; + \u0026#34;\\\u0026#34;include\\\u0026#34; and \\\u0026#34;lib\\\u0026#34;.\u0026#34;); Wizard.AddInfoPage(_T(\u0026#34;GlutIntro\u0026#34;), intro_msg); Wizard.AddProjectPathPage(); if (PLATFORM == PLATFORM_MAC) { FreeGlutPathDefault=\u0026#34;/System/Library/Frameworks/FreeGLUT.framework\u0026#34;; } else Wizard.AddGenericSelectPathPage(_T(\u0026#34;FreeGlutPath\u0026#34;), glutpath_descr, _T(\u0026#34;Please select FreeGLUT\u0026#39;s location:\u0026#34;), FreeGlutPathDefault); Wizard.AddCompilerPage(_T(\u0026#34;\u0026#34;), _T(\u0026#34;*\u0026#34;), true, true); } //////////////////////////////////////////////////////////////////////////////// // GLUT\u0026#39;s path page //////////////////////////////////////////////////////////////////////////////// function OnLeave_GlutPath(fwd) { if (fwd) { local dir = Wizard.GetTextControlValue(_T(\u0026#34;txtFolder\u0026#34;)); // txtFolder is the text control in GenericSelectPathPage local dir_nomacro = VerifyDirectory(dir); if (dir_nomacro.IsEmpty()) return false; // verify include dependencies local dir_nomacro_inc = GetCompilerIncludeDir(dir, FreeGlutPathDefault, FreeGlutPathDefaultInc); if (dir_nomacro_inc.IsEmpty()) return false; if (!VerifyFile(dir_nomacro_inc + wxFILE_SEP_PATH + _T(\u0026#34;GL\u0026#34;), _T(\u0026#34;freeglut.h\u0026#34;), _T(\u0026#34;FreeGLUT\u0026#39;s include\u0026#34;))) return false; // verify library dependencies local dir_nomacro_lib = GetCompilerLibDir(dir, FreeGlutPathDefault, FreeGlutPathDefaultLib); if (dir_nomacro_lib.IsEmpty()) return false; if (PLATFORM == PLATFORM_MSW) { if (!VerifyLibFile(dir_nomacro_lib, _T(\u0026#34;freeglut\u0026#34;), _T(\u0026#34;FreeGLUT\u0026#39;s\u0026#34;))) return false; } else { if (!VerifyLibFile(dir_nomacro_lib, _T(\u0026#34;freeglut\u0026#34;), _T(\u0026#34;FreeGLUT\u0026#39;s\u0026#34;))) return false; } FreeGlutPath = dir; // Remember the original selection. local is_macro = _T(\u0026#34;\u0026#34;); // try to resolve the include directory as macro is_macro = GetCompilerIncludeMacro(dir, FreeGlutPathDefault, FreeGlutPathDefaultInc); if (is_macro.IsEmpty()) { // not possible -\u0026gt; use the real inc path we had computed instead FreeGlutPathDefaultInc = dir_nomacro_inc; } // try to resolve the library directory as macro is_macro = GetCompilerLibMacro(dir, FreeGlutPathDefault, FreeGlutPathDefaultLib); if (is_macro.IsEmpty()) { // not possible -\u0026gt; use the real lib path we had computed instead FreeGlutPathDefaultLib = dir_nomacro_lib; } } return true; } // return the files this project contains function GetFilesDir() { return _T(\u0026#34;glut/files\u0026#34;); } // setup the already created project function SetupProject(project) { // set project options if (PLATFORM != PLATFORM_MAC) { project.AddIncludeDir(FreeGlutPathDefaultInc); project.AddLibDir(FreeGlutPathDefaultLib); } // add link libraries if (PLATFORM == PLATFORM_MSW) { project.AddLinkLib(_T(\u0026#34;freeglut\u0026#34;)); project.AddLinkLib(_T(\u0026#34;opengl32\u0026#34;)); project.AddLinkLib(_T(\u0026#34;glu32\u0026#34;)); project.AddLinkLib(_T(\u0026#34;winmm\u0026#34;)); project.AddLinkLib(_T(\u0026#34;gdi32\u0026#34;)); } else if (PLATFORM == PLATFORM_MAC) { project.AddLinkerOption(_T(\u0026#34;-framework GLUT\u0026#34;)); project.AddLinkerOption(_T(\u0026#34;-framework OpenGL\u0026#34;)); project.AddLinkerOption(_T(\u0026#34;-framework Cocoa\u0026#34;)); // GLUT dependency } else { project.AddLinkLib(_T(\u0026#34;glut\u0026#34;)); project.AddLinkLib(_T(\u0026#34;GL\u0026#34;)); project.AddLinkLib(_T(\u0026#34;GLU\u0026#34;)); project.AddLinkLib(_T(\u0026#34;Xxf86vm\u0026#34;)); } // enable compiler warnings (project-wide) WarningsOn(project, Wizard.GetCompilerID()); // Debug local target = project.GetBuildTarget(Wizard.GetDebugName()); if (!IsNull(target)) { target.SetTargetType(ttConsoleOnly); // ttConsoleOnly: console for debugging target.SetOutputFilename(Wizard.GetDebugOutputDir() + Wizard.GetProjectName() + DOT_EXT_EXECUTABLE); target.SetWorkingDir(FreeGlutPath + _T(\u0026#34;/bin\u0026#34;)); // enable generation of debugging symbols for target DebugSymbolsOn(target, Wizard.GetCompilerID()); } // Release target = project.GetBuildTarget(Wizard.GetReleaseName()); if (!IsNull(target)) { target.SetTargetType(ttExecutable); // ttExecutable: no console target.SetOutputFilename(Wizard.GetReleaseOutputDir() + Wizard.GetProjectName() + DOT_EXT_EXECUTABLE); target.SetWorkingDir(FreeGlutPath + _T(\u0026#34;/bin\u0026#34;)); // enable optimizations for target OptimizationsOn(target, Wizard.GetCompilerID()); } return true; } Save it.\nNow on /usr/share/codeblocks/templates/wizard directory, there is a script named config.script and add the following line at the end of the file: RegisterWizard(wizProject, _T(\u0026#34;freeglut\u0026#34;), _T(\u0026#34;FreeGLUT project\u0026#34;), _T(\u0026#34;2D/3D Graphics\u0026#34;)); Now go to this link, this is the Freeglut project\u0026rsquo;s source files, download the latest stable: Extract it. Copy the contents of the extracted folder and paste it on the /usr/share/codeblocks/templates/wizard/freeglut directory. At the time of writing, it looks like this: Codeblocks Setup Part If everything goes well/correctly, Codeblocks should be open without warning/showing any errors.\nOpen Codeblocks. Go to File \u0026gt; New \u0026gt; Projects and this dialog should be showing with Freeglut Project: Give a name of the project as you see fit: Then, specify the location where the Freeglut is: Leave the next dialog as it is (don\u0026rsquo;t change anything): At this moment your Codeblocks should be ready for the Freeglut projects.\nFinal Part Just checking if things are working or not.\nGo to sources, there should be a main.cpp file for test running: Build and Run! That\u0026rsquo;s it.\nOkay, that\u0026rsquo;s all. Hope, everything works fine. See ya later!\n","permalink":"https://dhar01.github.io/posts/codeblocks-with-freeglut-linux/","summary":"In my Computer Graphics class, the teacher asked us to setup Codeblocks for the glut. She gave us a tutorial on how to setup Codeblocks on windows but didn\u0026rsquo;t provide any suggestion to set up on Linux. After some searching on google, I was able to setup Codeblocks with Freeglut (which is an alternative to Glut and available on Linux). This is a kind of writeup (or tutorial) on how I was able to setup Codeblocks with Freeglut.","title":"Setting up Codeblocks with Freeglut on Linux"},{"content":"Task 2 A DNS request is made. When browser knows the server\u0026rsquo;s IP address, it ask the server for the web page which is done with a HTTP GET request.\nGET is an example of a HTTP verb, which are the different types of request. The server responds to the GET request with the web page content. IF the web page is loading extra resources, like JavaScript, images, or CSS files, those will be retrieved in separate GET requests.\nFor most websites now, these request will use HTTPS, a secure (encrypted) version of HTTP. This uses TLS 1.3 (normally) encryption in order to communicate without:\nother parties being able to read the data. other parties being able to modify the data. A web server is a software that receives and responds to HTTP(S) requests. Example: Apache, Nginx, Microsoft\u0026rsquo;s IIS.\nHTTP runs on port 80 and HTTPS runs on port 443.\nWhat request verb is used to retrieve page content? Ans: GET.\nWhat port do web servers normally listen on? Ans: 80.\nWhat\u0026rsquo;s responsible for making websites look fancy? Ans: CSS.\nTask 3 Requests There are 9 different HTTP \u0026ldquo;verbs\u0026rdquo;, also known as methods. Each one has a different function.\nPOST requests are used to send data to a web server.\nA HTTP request can be broken down into parts.\nGET /index.html The next section is headers, which give the server more information about requests.\nFinally, body of the requests. For POST requests, this is the content that\u0026rsquo;s sent to the server.\nResponses The server reply with a response, a status. Normally it\u0026rsquo;ll be a code. A basic breakdown of the status code is:\n100-199 : information. 200-299 : Successes. (200 OK is the \u0026ldquo;normal\u0026rdquo; response for a GET) 300-399 : Redirects (the information you want is elsewhere) 400-499 : Client errors (client did something wrong, like asking for something that doesn\u0026rsquo;t exist) 500-599 : server errors (server tried, but something went wrong on their side) What verb would be used for a login? Ans: POST.\nWhat verb would be used to see your bank balance once you\u0026rsquo;re logged in? Ans: GET.\nDoes the body of a GET request matter? Yea/Nay Ans: Nay.\nWhat\u0026rsquo;s the status code for \u0026ldquo;I\u0026rsquo;m a teapot\u0026rdquo;? Ans: 418.\nWhat status code will you get if you need to authenticate to access some content, and you\u0026rsquo;re unauthenticated? Ans: 401.\nTask 4 Cookies are small bits of data that are stored in browser.\nEach browser store them differently, so cookies won\u0026rsquo;t be able to another browser. They have a huge number of uses, but most common are either session management or advertising (tracking cookies). Cookies are normally sent with every HTTP request made to server.\nAs HTTP is stateless (each request is independent and no state is tracked internally), cookies are used to keep track of this. They allow sites to keep track of data.\nCookies have:\na name : identifies the cookie. a value : where data is stored. an expiry date : when the browser will get rid of the cookie automatically. a path : what requests the cookie will be sent with. The server is normally what sets cookies, and those come in the response headers (Set-Cookie). These can be set from javascript inside browser.\nWhen log in to a web application, normally they given a Session token. This allows the web server to identify requests. Stealing someone else\u0026rsquo;s session token can often allow to impersonate them.\nTask 5 We can make HTTP reques in many ways, including without browsers. For CTFs, we\u0026rsquo;ll ned to use cURL or a programming language as this allows to automate repetitive tasks.\nBy default, curl will perform GET requests on whatever URL it get suppplied, such as curl https://tryhackme.com\nThis will retrieve the main page of that website. With command line flags, we can do:\nThe -X flag allows to specify the request type. Ex: -X POST. The \u0026ndash;data flag allows to specify the data to POST with, which default to plain text data. Time for mini Ctf! There are some mentioned tasks on the ctf room. By connecting to the server with curl, we can get the flag for answers.\nWhat\u0026rsquo;s the GET flag? Ans: thm{162520bec925bd7979e9ae65a725f99f}\nWhat\u0026rsquo;s the POST flag? Ans: thm{3517c902e22def9c6e09b99a9040ba09}\nWhat\u0026rsquo;s the POST flag? Ans: thm{91b1ac2606f36b935f465558213d7ebd}\nWhat\u0026rsquo;s the \u0026ldquo;Set a cookie\u0026rdquo; flag? Ans: thm{c10b5cb7546f359d19c747db2d0f47b3}\nNote 1: the web site IP address my be differ from deployed machine. That\u0026rsquo;s why I hide it, enter the IP address you get from the room.\nNote 2: I heard this room was subscirber only, but at the time of writing, it is completely free.\n","permalink":"https://dhar01.github.io/posts/web-fundamentals-walkthrough/","summary":"Task 2 A DNS request is made. When browser knows the server\u0026rsquo;s IP address, it ask the server for the web page which is done with a HTTP GET request.\nGET is an example of a HTTP verb, which are the different types of request. The server responds to the GET request with the web page content. IF the web page is loading extra resources, like JavaScript, images, or CSS files, those will be retrieved in separate GET requests.","title":"Web Fundamentals walk-through [TryHackMe]"},{"content":"Shodan.io is a search engine for the internet of things. There is a room about Shodan in Tryhackme and this walk-through is about that.\nDue to the nature of Shodan and its scanning services, the answer is changing all the time. So keep trying.\nTask 01 An autonomous system number (ASN) is a global identifier of a range of IP addresses. Basically, large companies like Google, Microsoft have their own ASN for all of the IP addresses they own.\nTo find out ASN, first, we can search their IP address: ping google.com\nWe can put the IP address into an ASN lookup tool such as ultralools/asninfo\nThough, we can put the company name here to find the ASN, using the IP address seems the easiest one to me.\nOn shodan, we can search using the ASN filter. The filter is: ASN:[number] here, the number is marked on the picture.\nTask 02 What is Google\u0026rsquo;s ASN number? Ans: You know it now. ;)\nWhen it was allocated? Ans: Again, look at the details.\nWhere are most of the machines on this ASN number, physically in the world? Ans: United States.\nWhat is Google\u0026rsquo;s top service across all their devices on this ASN? Ans: SSH.\nWhat SSH product does Google use? Ans: OpenSSH.\nWhat is Google\u0026rsquo;s most used Google product, according to this search? Ignore the word \u0026ldquo;Google\u0026rdquo;. Ans: Cloud.\nTask 03 Here is a list of filters for shodan:\nproduct: product Name (ex: MySQL) city country Geo (co-ordinates) Hostname net (based on IP/CIDR) os (find operating systems) port before/after (time-frames) Task 04 What is the top operating system for MYSQL servers in Google\u0026rsquo;s ASN? Ans: 5.6.40–84.0-log\nWhat is the 2nd most popular country for MYSQL servers in Google\u0026rsquo;s ASN? Ans: Netherlands.\nUnder Google\u0026rsquo;s ASN, which is more popular for nginx, Hypertext Transfer Protocol, or Hypertext Transfer Protocol(s)? Ans: HyperText Transfer Protocol.\nPort 80 stands for HTTP; port 443 stands for HTTPs.\nUnder Google\u0026rsquo;s ASN, what is the most popular city? Ans: Mountain View. (answer changes time to time)\nUnder Google\u0026rsquo;s ASN in Los Angeles, what is the top operating system according to Shodan? Ans: PAN-OS. (answer changes time to time)\nUsing the top Webcam search from the explore page, does Google\u0026rsquo;s ASN have any webcams? Yay / nay. Ans: Nay.\nTask 05 Shodan has a limit on the free user account. It has an API, use it for more searches.\n","permalink":"https://dhar01.github.io/posts/shodan-walkthrough/","summary":"Shodan.io is a search engine for the internet of things. There is a room about Shodan in Tryhackme and this walk-through is about that.\nDue to the nature of Shodan and its scanning services, the answer is changing all the time. So keep trying.\nTask 01 An autonomous system number (ASN) is a global identifier of a range of IP addresses. Basically, large companies like Google, Microsoft have their own ASN for all of the IP addresses they own.","title":"Shodan.io Walk-through [Tryhackme]"}]